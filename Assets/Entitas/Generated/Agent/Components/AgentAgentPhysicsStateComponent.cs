//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AgentEntity {

    public Agent.PhysicsStateComponent agentPhysicsState { get { return (Agent.PhysicsStateComponent)GetComponent(AgentComponentsLookup.AgentPhysicsState); } }
    public bool hasAgentPhysicsState { get { return HasComponent(AgentComponentsLookup.AgentPhysicsState); } }

    public void AddAgentPhysicsState(KMath.Vec2f newPosition, KMath.Vec2f newPreviousPosition, float newSpeed, float newInitialJumpVelocity, KMath.Vec2f newVelocity, KMath.Vec2f newAcceleration, int newMovingDirection, int newFacingDirection, KMath.Vec2f newGroundNormal, Enums.AgentMovementState newMovementState, Agent.AgentAnimation newLastAgentAnimation, bool newSetMovementState, bool newAffectedByGravity, bool newAffectedByFriction, bool newInvulnerable, bool newOnGrounded, bool newDroping, int newJumpCounter, float newIdleAfterShootingTime, float newSlidingTime, float newDyingDuration, bool newActionInProgress, bool newActionJustEnded, float newActionDuration, float newDashDuration, float newDashCooldown, float newStaggerDuration, float newRollCooldown, float newRollImpactDuration) {
        var index = AgentComponentsLookup.AgentPhysicsState;
        var component = (Agent.PhysicsStateComponent)CreateComponent(index, typeof(Agent.PhysicsStateComponent));
        component.Position = newPosition;
        component.PreviousPosition = newPreviousPosition;
        component.Speed = newSpeed;
        component.InitialJumpVelocity = newInitialJumpVelocity;
        component.Velocity = newVelocity;
        component.Acceleration = newAcceleration;
        component.MovingDirection = newMovingDirection;
        component.FacingDirection = newFacingDirection;
        component.GroundNormal = newGroundNormal;
        component.MovementState = newMovementState;
        component.LastAgentAnimation = newLastAgentAnimation;
        component.SetMovementState = newSetMovementState;
        component.AffectedByGravity = newAffectedByGravity;
        component.AffectedByFriction = newAffectedByFriction;
        component.Invulnerable = newInvulnerable;
        component.OnGrounded = newOnGrounded;
        component.Droping = newDroping;
        component.JumpCounter = newJumpCounter;
        component.IdleAfterShootingTime = newIdleAfterShootingTime;
        component.SlidingTime = newSlidingTime;
        component.DyingDuration = newDyingDuration;
        component.ActionInProgress = newActionInProgress;
        component.ActionJustEnded = newActionJustEnded;
        component.ActionDuration = newActionDuration;
        component.DashDuration = newDashDuration;
        component.DashCooldown = newDashCooldown;
        component.StaggerDuration = newStaggerDuration;
        component.RollCooldown = newRollCooldown;
        component.RollImpactDuration = newRollImpactDuration;
        AddComponent(index, component);
    }

    public void ReplaceAgentPhysicsState(KMath.Vec2f newPosition, KMath.Vec2f newPreviousPosition, float newSpeed, float newInitialJumpVelocity, KMath.Vec2f newVelocity, KMath.Vec2f newAcceleration, int newMovingDirection, int newFacingDirection, KMath.Vec2f newGroundNormal, Enums.AgentMovementState newMovementState, Agent.AgentAnimation newLastAgentAnimation, bool newSetMovementState, bool newAffectedByGravity, bool newAffectedByFriction, bool newInvulnerable, bool newOnGrounded, bool newDroping, int newJumpCounter, float newIdleAfterShootingTime, float newSlidingTime, float newDyingDuration, bool newActionInProgress, bool newActionJustEnded, float newActionDuration, float newDashDuration, float newDashCooldown, float newStaggerDuration, float newRollCooldown, float newRollImpactDuration) {
        var index = AgentComponentsLookup.AgentPhysicsState;
        var component = (Agent.PhysicsStateComponent)CreateComponent(index, typeof(Agent.PhysicsStateComponent));
        component.Position = newPosition;
        component.PreviousPosition = newPreviousPosition;
        component.Speed = newSpeed;
        component.InitialJumpVelocity = newInitialJumpVelocity;
        component.Velocity = newVelocity;
        component.Acceleration = newAcceleration;
        component.MovingDirection = newMovingDirection;
        component.FacingDirection = newFacingDirection;
        component.GroundNormal = newGroundNormal;
        component.MovementState = newMovementState;
        component.LastAgentAnimation = newLastAgentAnimation;
        component.SetMovementState = newSetMovementState;
        component.AffectedByGravity = newAffectedByGravity;
        component.AffectedByFriction = newAffectedByFriction;
        component.Invulnerable = newInvulnerable;
        component.OnGrounded = newOnGrounded;
        component.Droping = newDroping;
        component.JumpCounter = newJumpCounter;
        component.IdleAfterShootingTime = newIdleAfterShootingTime;
        component.SlidingTime = newSlidingTime;
        component.DyingDuration = newDyingDuration;
        component.ActionInProgress = newActionInProgress;
        component.ActionJustEnded = newActionJustEnded;
        component.ActionDuration = newActionDuration;
        component.DashDuration = newDashDuration;
        component.DashCooldown = newDashCooldown;
        component.StaggerDuration = newStaggerDuration;
        component.RollCooldown = newRollCooldown;
        component.RollImpactDuration = newRollImpactDuration;
        ReplaceComponent(index, component);
    }

    public void RemoveAgentPhysicsState() {
        RemoveComponent(AgentComponentsLookup.AgentPhysicsState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class AgentMatcher {

    static Entitas.IMatcher<AgentEntity> _matcherAgentPhysicsState;

    public static Entitas.IMatcher<AgentEntity> AgentPhysicsState {
        get {
            if (_matcherAgentPhysicsState == null) {
                var matcher = (Entitas.Matcher<AgentEntity>)Entitas.Matcher<AgentEntity>.AllOf(AgentComponentsLookup.AgentPhysicsState);
                matcher.componentNames = AgentComponentsLookup.componentNames;
                _matcherAgentPhysicsState = matcher;
            }

            return _matcherAgentPhysicsState;
        }
    }
}
