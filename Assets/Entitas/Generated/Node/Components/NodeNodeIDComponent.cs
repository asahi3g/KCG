//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class NodeEntity {

    public Node.IDComponent nodeID { get { return (Node.IDComponent)GetComponent(NodeComponentsLookup.NodeID); } }
    public bool hasNodeID { get { return HasComponent(NodeComponentsLookup.NodeID); } }

    public void AddNodeID(int newID, Enums.ItemUsageActionType newTypeID) {
        var index = NodeComponentsLookup.NodeID;
        var component = (Node.IDComponent)CreateComponent(index, typeof(Node.IDComponent));
        component.ID = newID;
        component.TypeID = newTypeID;
        AddComponent(index, component);
    }

    public void ReplaceNodeID(int newID, Enums.ItemUsageActionType newTypeID) {
        var index = NodeComponentsLookup.NodeID;
        var component = (Node.IDComponent)CreateComponent(index, typeof(Node.IDComponent));
        component.ID = newID;
        component.TypeID = newTypeID;
        ReplaceComponent(index, component);
    }

    public void RemoveNodeID() {
        RemoveComponent(NodeComponentsLookup.NodeID);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class NodeMatcher {

    static Entitas.IMatcher<NodeEntity> _matcherNodeID;

    public static Entitas.IMatcher<NodeEntity> NodeID {
        get {
            if (_matcherNodeID == null) {
                var matcher = (Entitas.Matcher<NodeEntity>)Entitas.Matcher<NodeEntity>.AllOf(NodeComponentsLookup.NodeID);
                matcher.componentNames = NodeComponentsLookup.componentNames;
                _matcherNodeID = matcher;
            }

            return _matcherNodeID;
        }
    }
}
