//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ItemParticleEntity {

    public Item.FireWeapon.ChargedWeaponComponent itemFireWeaponChargedWeapon { get { return (Item.FireWeapon.ChargedWeaponComponent)GetComponent(ItemParticleComponentsLookup.ItemFireWeaponChargedWeapon); } }
    public bool hasItemFireWeaponChargedWeapon { get { return HasComponent(ItemParticleComponentsLookup.ItemFireWeaponChargedWeapon); } }

    public void AddItemFireWeaponChargedWeapon(bool newCanCharge, float newChargeRate, float newChargeRatio, float newChargePerShot, float newChargeMin, float newChargeMax) {
        var index = ItemParticleComponentsLookup.ItemFireWeaponChargedWeapon;
        var component = (Item.FireWeapon.ChargedWeaponComponent)CreateComponent(index, typeof(Item.FireWeapon.ChargedWeaponComponent));
        component.CanCharge = newCanCharge;
        component.ChargeRate = newChargeRate;
        component.ChargeRatio = newChargeRatio;
        component.ChargePerShot = newChargePerShot;
        component.ChargeMin = newChargeMin;
        component.ChargeMax = newChargeMax;
        AddComponent(index, component);
    }

    public void ReplaceItemFireWeaponChargedWeapon(bool newCanCharge, float newChargeRate, float newChargeRatio, float newChargePerShot, float newChargeMin, float newChargeMax) {
        var index = ItemParticleComponentsLookup.ItemFireWeaponChargedWeapon;
        var component = (Item.FireWeapon.ChargedWeaponComponent)CreateComponent(index, typeof(Item.FireWeapon.ChargedWeaponComponent));
        component.CanCharge = newCanCharge;
        component.ChargeRate = newChargeRate;
        component.ChargeRatio = newChargeRatio;
        component.ChargePerShot = newChargePerShot;
        component.ChargeMin = newChargeMin;
        component.ChargeMax = newChargeMax;
        ReplaceComponent(index, component);
    }

    public void RemoveItemFireWeaponChargedWeapon() {
        RemoveComponent(ItemParticleComponentsLookup.ItemFireWeaponChargedWeapon);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiInterfaceGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ItemParticleEntity : IItemFireWeaponChargedWeaponEntity { }

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ItemParticleMatcher {

    static Entitas.IMatcher<ItemParticleEntity> _matcherItemFireWeaponChargedWeapon;

    public static Entitas.IMatcher<ItemParticleEntity> ItemFireWeaponChargedWeapon {
        get {
            if (_matcherItemFireWeaponChargedWeapon == null) {
                var matcher = (Entitas.Matcher<ItemParticleEntity>)Entitas.Matcher<ItemParticleEntity>.AllOf(ItemParticleComponentsLookup.ItemFireWeaponChargedWeapon);
                matcher.componentNames = ItemParticleComponentsLookup.componentNames;
                _matcherItemFireWeaponChargedWeapon = matcher;
            }

            return _matcherItemFireWeaponChargedWeapon;
        }
    }
}
